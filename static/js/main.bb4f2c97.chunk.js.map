{"version":3,"sources":["img/Prevportal.png","views/Galeria.js","App.js","reportWebVitals.js","index.js"],"names":["require","Hueso","console","log","className","background","position","material","cursor","id","alt","src","prevportal","crossorigin","environment","scale","shadow","href","title","image","borderColor","event-set__enter","event-set__leave","backgroundColor","App","path","Galeria","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAe,MAA0B,uC,OCGzCA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAKR,IAsFeC,EAtFD,WAEZ,OADAC,QAAQC,IAAI,QAEV,0BAASC,UAAU,QAAnB,UACE,qCACA,qBAAKA,UAAU,QAAf,SACE,qCACG,IACD,0BAASC,WAAW,aAApB,UACE,0BAAUC,SAAS,QAAnB,SACE,0BACEC,SAAS,gBACTC,OAAO,qCAIX,mCAEE,qBACEC,GAAG,OACHC,IAAI,OACJC,IAAKC,EACLC,YAAY,gBAUhB,0BACEC,YAAY,0FACZC,MAAM,QACNC,OAAO,kBAWT,wBACEC,KAAK,kCACLC,MAAM,6BACNH,MAAM,QACNT,SAAS,WACTa,MAAM,QACNC,YAAY,QACZC,mBAAiB,oDACjBC,mBAAiB,qDARnB,SAUE,yBACEX,IAAI,QACJJ,SAAS,wBACTQ,MAAM,QACNT,SAAS,eAIb,wBACEW,KAAK,gCACLC,MAAM,MACNH,MAAM,QACNT,SAAS,WACTa,MAAM,QACNI,gBAAgB,OANlB,SAQE,yBACEZ,IAAI,QACJJ,SAAS,wBACTQ,MAAM,QACNQ,gBAAgB,OAChBjB,SAAS,2BCnEVkB,MAff,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,IAAD,UACA,cAAC,IAAD,UACA,cAAC,IAAD,CAAOqB,KAAK,IAAZ,SAEQ,cAACC,EAAD,aCDCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb4f2c97.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Prevportal.13629f37.png\";","import React from \"react\";\nimport prevportal from \"../img/Prevportal.png\";\n\nrequire(\"aframe\");\nrequire(\"aframe-environment-component\");\nrequire(\"aframe-liquid-portal-shader\");\nrequire(\"aframe-event-set-component\");\n//import(\"aframe-gif-shader\");\n\n// import campo from \"../img/equ.jpg\";\n\nconst Hueso = () => {\n  console.log(\"hola\");\n  return (\n    <section className=\"Hueso\">\n      <h1>xyz</h1>\n      <div className=\"scene\">\n        <>\n          {\" \"}\n          <a-scene background=\"color: red\">\n            <a-camera position=\"3 7 2\">\n              <a-cursor\n                material=\"color:#76ff03\"\n                cursor=\"fuse: false; fuseTimeout: 1000\"\n              ></a-cursor>\n            </a-camera>\n\n            <a-assets>\n              {/* <a-asset-item id=\"cristal\" src={cristal}></a-asset-item> */}\n              <img\n                id=\"demo\"\n                alt=\"hola\"\n                src={prevportal}\n                crossorigin=\"anonymous\"\n              />\n            </a-assets>\n            {/* <a-entity\n              geometry=\"primitive: plane;\"\n              material=\"shader:gif;src:url(https://raw.githubusercontent.com/Codelessly/FlutterLoadingGIFs/master/packages/cupertino_activity_indicator.gif);\"\n              scale=\"6 6 6\"\n              position=\"50 8 -30\"\n            ></a-entity> */}\n\n            <a-entity\n              environment=\"preset:checkerboard; castShadow: true; fog:0.7; groundColor:white; groundColor2:#fcfcfc\"\n              scale=\"2 1 2\"\n              shadow=\"receive: true\"\n            />\n\n            {/* hoja de usuario */}\n            {/* <a-plane\n              position=\"2.3 8 -10\"\n              rotation=\"0 0 0\"\n              scale=\"20 15 2\"\n              \n            /> */}\n\n            <a-link\n              href=\"https://crbzxy.github.io/errar/\"\n              title=\"Errar-Possibility of light\"\n              scale=\"6 6 6\"\n              position=\"-1 8 -25\"\n              image=\"#demo\"\n              borderColor=\"black\"\n              event-set__enter=\"_event: mouseenter; _target: #demo; visible: true\"\n              event-set__leave=\"_event: mouseleave; _target: #demo; visible: false\"\n            >\n              <a-image\n                src=\"#demo\"\n                material=\"shader: liquid-portal\"\n                scale=\"2 2 2\"\n                position=\"0 0 0.01\"\n              />\n            </a-link>\n\n            <a-link\n              href=\"https://crbzxy.github.io/xyz/\"\n              title=\"xyz\"\n              scale=\"6 6 6\"\n              position=\"30 8 -30\"\n              image=\"#demo\"\n              backgroundColor=\"blue\"\n            >\n              <a-image\n                src=\"#demo\"\n                material=\"shader: liquid-portal\"\n                scale=\"2 2 2\"\n                backgroundColor=\"blue\"\n                position=\"0 0 0.01\"\n              />\n            </a-link>\n          </a-scene>\n        </>\n      </div>\n    </section>\n  );\n};\nexport default Hueso;\n","import React from 'react';\n\nimport \"./Scss/index.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Galeria from \"../src/views/Galeria\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n      <Route path=\"/\">\n              \n              <Galeria/>\n            </Route>\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Scss/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}